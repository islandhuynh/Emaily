{"version":3,"sources":["actions/types.js","actions/index.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["FETCH_USER","fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","style","margin","credits","to","user","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","exact","path","component","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"yWAAaA,EAAa,aCGbC,EAAY,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACTC,IAAMC,IAAI,qBADD,OACrBC,EADqB,OAE3BJ,EAAS,CAAEK,KAAMP,EAAYQ,QAASF,EAAIG,OAFf,2CAAN,uDAKZC,EAAc,SAACC,GAAD,8CAAW,WAAMT,GAAN,eAAAC,EAAA,sEAChBC,IAAMQ,KAAK,cAAeD,GADV,OAC5BL,EAD4B,OAGlCJ,EAAS,CAAEK,KAAMP,EAAYQ,QAASF,EAAIG,OAHR,2CAAX,uD,iBCHrBI,E,uKACS,IAAD,OAEN,OACI,cAAC,IAAD,CACIC,KAAO,SACPC,YAAc,0BACdC,OAAU,IACVL,MAAS,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACzCO,UAAaC,8GALjB,SAOI,wBAAQC,UAAU,MAAlB,+B,GAXOC,aAmBRC,cAAQ,KAAMC,EAAdD,CAAuBT,GCnBhCW,E,8KAEE,OAAQC,KAAKR,MAAMS,MACf,KAAK,KACD,OACJ,KAAK,EACD,OACI,6BAAI,mBAAGC,KAAK,eAAR,iCAEZ,QACI,MAAO,CACH,6BAAY,cAAC,EAAD,KAAJ,KACR,qBAAYC,MAAO,CAACC,OAAQ,UAA5B,sBACcJ,KAAKR,MAAMS,KAAKI,UADtB,KAGR,6BAAY,mBAAGH,KAAK,cAAR,qBAAJ,S,+BAMpB,OACI,8BACI,sBAAKP,UAAU,cAAf,UACI,cAAC,IAAD,CACIW,GAAIN,KAAKR,MAAMe,KAAO,WAAa,IACnCZ,UAAU,kBAFd,oBAMA,oBAAIA,UAAU,QAAd,SACKK,KAAKQ,2B,GA/BTZ,aA2CNC,mBAJf,YACI,MAAO,CAAEI,KADuB,EAARA,QAIbJ,CAAyBE,GCrCzBU,EATC,WACZ,OACI,sBAAKN,MAAO,CAAGO,UAAW,UAA1B,UACI,yCADJ,wCCIFC,EAAY,kBAAM,4CAClBC,EAAY,kBAAM,4CAIlBC,E,kLAEEb,KAAKR,MAAMhB,c,+BAIX,OACI,qBAAKmB,UAAU,YAAf,SACI,cAAC,IAAD,UACI,gCACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAAWC,UAAWL,IACxC,cAAC,IAAD,CAAOI,KAAK,eAAeC,UAAWJ,e,GAb5ChB,aAsBHC,cAAQ,KAAMC,EAAdD,CAAuBgB,GChCvBI,cAAgB,CAC5BhB,KCFY,WAAiC,IAAvBiB,EAAsB,uDAAd,KAAMC,EAAQ,uCAC3C,OAAQA,EAAOrC,MACX,KAAKP,EACD,OAAO4C,EAAOpC,UAAW,EAC7B,QACI,OAAOmC,MCIbE,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SAAwB,cAAC,EAAD,MACxBO,SAASC,cAAc,Y","file":"static/js/main.3bdf0a61.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';","import axios from 'axios';\r\nimport { FETCH_USER } from './types';\r\n\r\nexport const fetchUser = () => async dispatch => {\r\n    const res = await axios.get('/api/current_user');\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const handleToken = (token) => async dispatch => {\r\n    const res = await axios.post('/api/stripe', token);\r\n\r\n    dispatch({ type: FETCH_USER, payload: res.data});\r\n}","import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass Payments extends Component {\r\n    render () {\r\n\r\n        return (\r\n            <StripeCheckout \r\n                name = \"Emaily\"\r\n                description = \" $5 for 5 email credits\"\r\n                amount = {500}\r\n                token = {token => this.props.handleToken(token)}\r\n                stripeKey = {process.env.REACT_APP_STRIPE_KEY}\r\n            >\r\n                <button className=\"btn\">\r\n                    Add Credits\r\n                </button>\r\n            </StripeCheckout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(Payments);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments';\r\n\r\nclass Header extends Component {\r\n    renderContent() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return;\r\n            case false:\r\n                return (\r\n                    <li><a href=\"/auth/google\">Login With Google</a></li>\r\n                );\r\n            default: \r\n                return [\r\n                    <li key=\"1\"><Payments /></li>,\r\n                    <li key=\"3\" style={{margin: '0 10px'}}>\r\n                        Credits: {this.props.auth.credits}\r\n                    </li>,\r\n                    <li key=\"2\"><a href=\"/api/logout\">Logout</a></li>\r\n                ];\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <Link \r\n                        to={this.props.user ? '/surveys' : '/'} \r\n                        className=\"left brand-logo\"\r\n                    >\r\n                        Emaily\r\n                    </Link>\r\n                    <ul className=\"right\">\r\n                        {this.renderContent()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps ({ auth }) {\r\n    return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div style={{  textAlign: 'center' }}>\r\n            <h1>Emaily!</h1>\r\n            Collect feedback from your users!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\n\r\nconst Dashboard = () => <h2>Dashboard</h2>\r\nconst SurveyNew = () => <h2>SurveyNew</h2>\r\n\r\n// Note: Browser Router only takes one child\r\n\r\nclass App extends Component {\r\n    componentDidMount () {\r\n        this.props.fetchUser();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"container\">\r\n                <BrowserRouter>\r\n                    <div>\r\n                        <Header />\r\n                        <Route exact path=\"/\" component={Landing} />\r\n                        <Route exact path=\"/surveys\" component={Dashboard}/>\r\n                        <Route path=\"/surveys/new\" component={SurveyNew}/>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n// connect assigns actions as props to our App component\r\nexport default connect(null, actions)(App);","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n   auth: authReducer \r\n});","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default: \r\n            return state;\r\n    }\r\n}","import 'materialize-css/dist/css/materialize.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}><App /></Provider>, \r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}